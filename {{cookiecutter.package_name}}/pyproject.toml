[project]
name = "{{ cookiecutter.package_name }}"
version = "1.0.0"
description = "{{ cookiecutter.short_description }}"
authors = [
    {name = "{{ cookiecutter.author }}"},
]
dependencies = [
{%- if cookiecutter.include_components_only %}
    "trame_client>=3.10",
{%- else %}
    "trame>=3.12",
    "trame-vuetify",
    "trame-vtk",
{%- endif %}
]
requires-python = ">=3.9"
readme = "README.rst"
license = {text = "{{ cookiecutter.license }}"}
keywords = ["Python", "Interactive", "Web", "Application", "Framework"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
{%- if cookiecutter.is_open_source %}
    "License :: OSI Approved :: {{ cookiecutter.license }}",
{%- else %}
    "License :: Other/Proprietary License",
{%- endif %}
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.optional-dependencies]
app = [
    "pywebview",
]
jupyter = [
    "jupyterlab",
]
dev = [
    "pre-commit",
    "ruff",
    "pytest >=6",
    "pytest-cov >=3",
    "nox",
]
{%- if cookiecutter.include_app %}

[project.scripts]
{{cookiecutter.entry_point}} = "{{cookiecutter.import_name}}.app:main"
{%- endif %}

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.hatch.build]
include = [
{%- if cookiecutter.include_components_only %}
  "/src/trame/**/*.py",
{%- endif %}
  "/src/{{cookiecutter.import_name}}/**/*.py",
  "/src/{{cookiecutter.import_name}}/**/*.js",
  "/src/{{cookiecutter.import_name}}/**/*.css",
]

[tool.hatch.build.targets.wheel]
packages = [
{%- if cookiecutter.include_components_only %}
    "src/trame",
{%- endif %}
    "src/{{cookiecutter.import_name}}",
]

[tool.ruff]

[tool.ruff.lint]
extend-select = [
    "ARG", # flake8-unused-arguments
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "EM",  # flake8-errmsg
    "EXE", # flake8-executable
    "G",   # flake8-logging-format
    "I",   # isort
    "ICN", # flake8-import-conventions
    "NPY", # NumPy specific rules
    "PD",  # pandas-vet
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "RET", # flake8-return
    "RUF", # Ruff-specific
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "UP",  # pyupgrade
    "YTT", # flake8-2020
]
ignore = [
    "PLR09",   # Too many <...>
    "PLR2004", # Magic value used in comparison
    "ISC001",  # Conflicts with formatter
]
isort.required-imports = []

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]
"noxfile.py" = ["T20"]
"src/**" = ["SIM117"]

{%- if cookiecutter.include_ci %}
[tool.semantic_release]
version_toml = [
    "pyproject.toml:project.version",
]
version_variables = [
    "src/{{cookiecutter.import_name}}/__init__.py:__version__",
]

build_command = "uv build"

[semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

{%- endif %}
