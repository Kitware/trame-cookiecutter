name: Test and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    env:
      UV_PYTHON: "3.9"
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.8.12"
          enable-cache: true
      - name: Install the project
        run: uv sync --all-extras --dev

      # Install and run pre-commit
      - run: |
          uv run pre-commit install
          uv run pre-commit install --hook-type commit-msg
          uv run pre-commit run --all-files

  pytest:
{%- raw %}
    name: Pytest ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
{%- endraw %}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
        config:
        - {
            name: "Linux",
            os: ubuntu-latest
          }
        - {
            name: "MacOSX",
            os: macos-latest
          }
        - {
            name: "Windows",
            os: windows-latest
          }

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4
{%- raw %}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "0.8.12"
        enable-cache: true
{%- endraw %}
    - name: Install and Run Tests
      run: |
        uv sync --dev
        uv pip install -r tests/requirements.txt
        uv run pytest -s ./tests
{%- if cookiecutter.include_components %}

  test-npm-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Up Node
        uses: actions/setup-node@v4
        with:
          node-version: 24

      - name: Build Vue Components
        run: |
          cd vue-components
          npm i
          npm run build
{%- endif %}

  release:
    needs: [
      pre-commit,
      pytest,
{%- if cookiecutter.include_components %}
      test-npm-build,
{%- endif %}
    ]
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing
      contents: write # IMPORTANT: mandatory for making GitHub Releases

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
{%- if cookiecutter.include_components %}

      - name: Set Up Node
        uses: actions/setup-node@v4
        with:
          node-version: 24

      - name: Build Vue Components
        run: |
          cd vue-components
          npm i
          npm run build
{%- endif %}

      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@master
        with:
{%- raw %}
          github_token: ${{ secrets.GITHUB_TOKEN }}
{%- endraw %}

      # https://docs.pypi.org/trusted-publishers/using-a-publisher/
      - name: Publish package distributions to PyPI
        if: steps.release.outputs.released == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
